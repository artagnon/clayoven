claytext demo

...
This page serves to demonstrate the capabilities of the clayoven engine
...

$$
  \Pi_{A : \mathscr{U}} \Pi_{x, y, z : A} (x = y) \rightarrow (y = z) \rightarrow (x = z)
$$

# Functors

```coq
Definition ap {A B : Type} (f : A -> B) {x y : A} (p : x = y) : f x = f y
  := match p with idpath => idpath end.
```

```cpp
template <size_t i, typename... Ts, typename CurTy>
void recurseFillChildren(CurTy &E)
{
  using PackTy = std::variant<Ts...>;
  using TyL = std::variant_alternative_t<i - 1, PackTy>;
  static_assert(std::is_same_v<CurTy, TyL>);
  using TyR = std::variant_alternative_t<i, PackTy>;

  for (i32 j = 0; j < E.NChildren; ++j)
  {
    E.Children.push_back(miniParser<TyR>());
    if constexpr (i + 1 < sizeof...(Ts))
      recurseFillChildren<i + 1, Ts...>(E.Children.back());
  }
};
```

<< 1508x1782
https://user-images.githubusercontent.com/37226/113476397-96fd4100-947b-11eb-8691-285509b1f686.png
>>

(iii) $A/\mathfrak{N}$ is a field.

(a) The Split dominates the Merge.

† clayoven is licensed under the MIT license.
‡ Contributions to clayoven are most welcome.
