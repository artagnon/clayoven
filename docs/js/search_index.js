var search_data = {"index":{"searchIndex":["clayoven","claytext","paragraph","transforms","util","util","config","git","httpd","init","toplevel","contentpage","indexpage","page","util","<=>()","added?()","added_or_modified?()","any_added?()","create_template()","design_changed?()","dirty_pages()","dirty_pages_from_add()","dirty_pages_from_mod()","dist_location()","fenced_transforms!()","fillindex()","find_dirty_index_pages()","find_topics()","generate_html()","generate_site()","generate_sitemap()","index_content_files()","init()","inline_transforms!()","lex_sort()","line_transforms!()","ls_files()","main()","merge_fenced!()","metadata()","minify_design()","modified?()","modified_files_from_gitidx()","new()","new()","new()","new()","new()","new()","pages_to_render()","process()","render()","render_math()","separate_index_content_files()","sitewide_lastmod()","slice_strip_fences!()","start()","template_changed?()","to_arabic()","toplevel()","unhidden_content_files()","update_crdate_lastmod()","license","readme"],"longSearchIndex":["clayoven","clayoven::claytext","clayoven::claytext::paragraph","clayoven::claytext::transforms","clayoven::claytext::transforms::util","clayoven::claytext::util","clayoven::config","clayoven::git","clayoven::httpd","clayoven::init","clayoven::toplevel","clayoven::toplevel::contentpage","clayoven::toplevel::indexpage","clayoven::toplevel::page","clayoven::toplevel::util","clayoven::toplevel::contentpage#<=>()","clayoven::git#added?()","clayoven::git#added_or_modified?()","clayoven::git#any_added?()","clayoven::config#create_template()","clayoven::git#design_changed?()","clayoven::toplevel::dirty_pages()","clayoven::toplevel::dirty_pages_from_add()","clayoven::toplevel::dirty_pages_from_mod()","clayoven::init::dist_location()","clayoven::claytext::fenced_transforms!()","clayoven::toplevel::indexpage#fillindex()","clayoven::toplevel::find_dirty_index_pages()","clayoven::toplevel::find_topics()","clayoven::toplevel::generate_html()","clayoven::toplevel::generate_site()","clayoven::toplevel::generate_sitemap()","clayoven::toplevel::index_content_files()","clayoven::init::init()","clayoven::claytext::inline_transforms!()","clayoven::toplevel::util::lex_sort()","clayoven::claytext::line_transforms!()","clayoven::toplevel::util::ls_files()","clayoven::toplevel::main()","clayoven::claytext::merge_fenced!()","clayoven::git#metadata()","clayoven::toplevel::util::minify_design()","clayoven::git#modified?()","clayoven::toplevel::modified_files_from_gitidx()","clayoven::claytext::paragraph::new()","clayoven::config::new()","clayoven::git::new()","clayoven::toplevel::contentpage::new()","clayoven::toplevel::indexpage::new()","clayoven::toplevel::page::new()","clayoven::toplevel::pages_to_render()","clayoven::claytext::process()","clayoven::toplevel::page#render()","clayoven::toplevel::util::render_math()","clayoven::toplevel::separate_index_content_files()","clayoven::toplevel::sitewide_lastmod()","clayoven::claytext::util::slice_strip_fences!()","clayoven::httpd::start()","clayoven::git#template_changed?()","clayoven::claytext::transforms::util::to_arabic()","clayoven::git::toplevel()","clayoven::toplevel::unhidden_content_files()","clayoven::toplevel::indexpage#update_crdate_lastmod()","",""],"info":[["Clayoven","","Clayoven.html","","<p>The main clayoven module\n<p>Clayoven::Toplevel, Clayoven::Httpd, Clayoven::Init, and other modules required …\n"],["Clayoven::Claytext","","Clayoven/Claytext.html","","<p>The claytext paragraph processor\n<p>The actual transformation rules are the constants in Clayoven::Claytext::Transforms …\n"],["Clayoven::Claytext::Paragraph","","Clayoven/Claytext/Paragraph.html","","<p>A paragraph of text; just a <code>String</code> with additional accessors\n"],["Clayoven::Claytext::Transforms","","Clayoven/Claytext/Transforms.html","","<p>The transforms that act on a Clayoven::Claytext::Paragraph\n<p>Extending the syntax of claytext is easy: just …\n"],["Clayoven::Claytext::Transforms::Util","","Clayoven/Claytext/Transforms/Util.html","","<p>Miscellanous utilities\n"],["Clayoven::Claytext::Util","","Clayoven/Claytext/Util.html","","<p>Miscellanous utilities\n"],["Clayoven::Config","","Clayoven/Config.html","","<p>Clayoven Configuration\n<p>Clayoven can be configured using files <code>.clayoven/{sitename, hidden, tz, subtopics}</code> …\n"],["Clayoven::Git","","Clayoven/Git.html","","<p>Git metadata information for the clayoven repository\n<p>Information from the git index via new is cheap, …\n"],["Clayoven::Httpd","","Clayoven/Httpd.html","","<p>The entry point for <code>clayoven httpd</code>\n<p>Run a simple webrick http server to test on localhost:8000\n"],["Clayoven::Init","","Clayoven/Init.html","","<p>Entry point for <code>clayoven init</code>\n<p>It copies the <code>dist</code> directory from the source tree to the new project, invokes …\n"],["Clayoven::Toplevel","","Clayoven/Toplevel.html","","<p>The toplevel module for clayoven, which contains main\n"],["Clayoven::Toplevel::ContentPage","","Clayoven/Toplevel/ContentPage.html","","<p>A “content page”\n<p>For .clay files nested within subdirectories, with a corresponding <code>#{subdirectory}.index.clay</code> …\n"],["Clayoven::Toplevel::IndexPage","","Clayoven/Toplevel/IndexPage.html","","<p>An “index page”\n<p>Should be an <code>index.clay</code> in the toplevel directory, or <code>#{topic}.index.clay</code> files …\n"],["Clayoven::Toplevel::Page","","Clayoven/Toplevel/Page.html","","<p>An abstract page class\n<p>IndexPage and ContentPage inherit from this class. Exposes accessors to various …\n"],["Clayoven::Toplevel::Util","","Clayoven/Toplevel/Util.html","","<p>Miscellanous utilities\n"],["<=>","Clayoven::Toplevel::ContentPage","Clayoven/Toplevel/ContentPage.html#method-i-3C-3D-3E","(other)","<p>sort is unstable, and we resolve equality of crdate elegantly\n"],["added?","Clayoven::Git","Clayoven/Git.html#method-i-added-3F","(file)","<p>Indicates if a file was added, from git index\n"],["added_or_modified?","Clayoven::Git","Clayoven/Git.html#method-i-added_or_modified-3F","(file)","<p>Indicates if any of the files in the list of files were added or modified, from git index\n"],["any_added?","Clayoven::Git","Clayoven/Git.html#method-i-any_added-3F","(files)","<p>Indicates if any of the files in the list of files were added, from git index\n"],["create_template","Clayoven::Config","Clayoven/Config.html#method-i-create_template","(path, default)","<p>Creates file at path, if it doesn’t exist, initializes with default\n"],["design_changed?","Clayoven::Git","Clayoven/Git.html#method-i-design_changed-3F","()","<p>Indicates if <code>design/style.sass</code> or <code>design/script.js</code> was changed\n"],["dirty_pages","Clayoven::Toplevel","Clayoven/Toplevel.html#method-c-dirty_pages","(index_files, content_files, is_aggressive)","<p>Return <code>Array</code> of IndexPage and ContentPage entries to render\n"],["dirty_pages_from_add","Clayoven::Toplevel","Clayoven/Toplevel.html#method-c-dirty_pages_from_add","(index_files, content_files)","<p>Simply create IndexPage and ContentPage entries out of index_files and content_files.\n"],["dirty_pages_from_mod","Clayoven::Toplevel","Clayoven/Toplevel.html#method-c-dirty_pages_from_mod","(index_files, content_files)","<p>Find the dirty IndexPage and ContentPage entries from some modification that occured in the git index, …\n"],["dist_location","Clayoven::Init","Clayoven/Init.html#method-c-dist_location","()","<p>Location of the dist directory\n"],["fenced_transforms!","Clayoven::Claytext","Clayoven/Claytext.html#method-c-fenced_transforms-21","(paragraphs)","<p>Perform the transforms in Clayoven::Claytext::Transforms::FENCED on Paragraph entries in-place\n"],["fillindex","Clayoven::Toplevel::IndexPage","Clayoven/Toplevel/IndexPage.html#method-i-fillindex","(content_pages, stmap)","<p>Initialize Page#subtopics, and call IndexPage#update_crdate_lastmod.\n"],["find_dirty_index_pages","Clayoven::Toplevel","Clayoven/Toplevel.html#method-c-find_dirty_index_pages","( dirty_content_pages, modified_index_files, progress )","<p>Find the dirty IndexPage entries from dirty ContentPage entries and <code>modified_index_files</code>.\nFirst, see ...\n"],["find_topics","Clayoven::Toplevel","Clayoven/Toplevel.html#method-c-find_topics","(index_files)","<p>Find the list of topics to be exposed as Page#topics.\n"],["generate_html","Clayoven::Toplevel","Clayoven/Toplevel.html#method-c-generate_html","(genpages, topics)","<p>Produce HTML files, first using Page#render, and then operating on the files produced\nin-place with  ...\n"],["generate_site","Clayoven::Toplevel","Clayoven/Toplevel.html#method-c-generate_site","(genpages, topics, is_aggressive)","<p>Generate HTML, minify the design, and generate the sitemap.\n"],["generate_sitemap","Clayoven::Toplevel","Clayoven/Toplevel.html#method-c-generate_sitemap","(all_pages)","<p>Generate <code>sitemap.xml</code> from all_pages.\n"],["index_content_files","Clayoven::Toplevel","Clayoven/Toplevel.html#method-c-index_content_files","(all_files)","<p>From all_files, find out the list of <code>index_files</code>, <code>content_files</code>, and <code>topics</code>, and return them.\n<p>Returns …\n"],["init","Clayoven::Init","Clayoven/Init.html#method-c-init","(destdir = \".\")","<p>The entry point for ‘clayoven init’. Does a ‘cp -rv #{distdir} #{destdir}“, ’git …\n"],["inline_transforms!","Clayoven::Claytext","Clayoven/Claytext.html#method-c-inline_transforms-21","(paragraphs)","<p>Insert &lt;{mark, strong, em, a, br}&gt; into the paragraph after escaping HTML\n"],["lex_sort","Clayoven::Toplevel::Util","Clayoven/Toplevel/Util.html#method-c-lex_sort","(files)","<p>Sorts a list of filenames lexicographically, but for ‘index.clay’\n"],["line_transforms!","Clayoven::Claytext","Clayoven/Claytext.html#method-c-line_transforms-21","(paragraphs)","<p>Perform the transforms in Clayoven::Claytext::Transforms::LINE on Paragraph entries in-place\n"],["ls_files","Clayoven::Toplevel::Util","Clayoven/Toplevel/Util.html#method-c-ls_files","()","<p>Fetch all .clay files, ∞ directories deep\n"],["main","Clayoven::Toplevel","Clayoven/Toplevel.html#method-c-main","(is_aggressive: false)","<p>The entry point for <code>clayoven</code>, and <code>clayoven aggressive</code>.\n"],["merge_fenced!","Clayoven::Claytext","Clayoven/Claytext.html#method-c-merge_fenced-21","(paragraphs, fregex, lregex)","<p>Merge Paragraph entries with fences marked by the start regex fregex and end regex lregex\n"],["metadata","Clayoven::Git","Clayoven/Git.html#method-i-metadata","(file)","<p>Returns a <code>[#{Last modified timestamp} # {Creation timestamp} #{Location strings}]</code>\nThe timestamps default ...\n"],["minify_design","Clayoven::Toplevel::Util","Clayoven/Toplevel/Util.html#method-c-minify_design","()","<p>Minify css and js files, by shelling out to yarn\n"],["modified?","Clayoven::Git","Clayoven/Git.html#method-i-modified-3F","(file)","<p>Indicates if a file was modified, from git index\n"],["modified_files_from_gitidx","Clayoven::Toplevel","Clayoven/Toplevel.html#method-c-modified_files_from_gitidx","(index_files, content_files)","<p>Find the modified index_files and added_or_modified content_files from the git index\n"],["new","Clayoven::Claytext::Paragraph","Clayoven/Claytext/Paragraph.html#method-c-new","(contents)","<p>Initializes the superclass, and sets type to <code>:plain</code>\n"],["new","Clayoven::Config","Clayoven/Config.html#method-c-new","()","<p>Initialize our config strings and hashtables based on some sane defaults\n"],["new","Clayoven::Git","Clayoven/Git.html#method-c-new","(tzmap)","<p>Look at the git index immediately; accepts a Clayoven::Config#tzmap hashtable\n"],["new","Clayoven::Toplevel::ContentPage","Clayoven/Toplevel/ContentPage.html#method-c-new","(filename, git)","<p>Initialize Page#topic, Page#subtopic, Page#permalink, and Page#target\n"],["new","Clayoven::Toplevel::IndexPage","Clayoven/Toplevel/IndexPage.html#method-c-new","(filename, git)","<p>Initialize permalink and target, with special handling for ‘index.clay’;\nevery other filename ...\n"],["new","Clayoven::Toplevel::Page","Clayoven/Toplevel/Page.html#method-c-new","(filename, git)","<p>Initialize with filename and data from Clayoven::Git#metadata\n<p>Expensive due to <code>log --follow</code>; avoid creating …\n"],["pages_to_render","Clayoven::Toplevel","Clayoven/Toplevel.html#method-c-pages_to_render","(index_files, content_files, is_aggressive)","<p>Return IndexPage and ContentPage entries to render; we work with index_files and content_files, because …\n"],["process","Clayoven::Claytext","Clayoven/Claytext.html#method-c-process","(body)","<p>Takes a body of claytext (<code>String</code>), breaks it up into paragraphs, and\napplies various rules on it.\n<p>Returns …\n"],["render","Clayoven::Toplevel::Page","Clayoven/Toplevel/Page.html#method-i-render","(topics, template)","<p>Writes out HTML pages rendered by Clayoven::Claytext::process and <code>Slim::Template</code>\nInitializes Page#topics ...\n"],["render_math","Clayoven::Toplevel::Util","Clayoven/Toplevel/Util.html#method-c-render_math","(htmlfiles)","<p>Shell out to yarn to render math, via MathJaX and XyJaX\nVery expensive if you have a lot of math on your ...\n"],["separate_index_content_files","Clayoven::Toplevel","Clayoven/Toplevel.html#method-c-separate_index_content_files","(all_files)","<p>Separate out <code>index_files</code> and <code>content_files</code> from <code>all_files</code> based on filename\n"],["sitewide_lastmod","Clayoven::Toplevel","Clayoven/Toplevel.html#method-c-sitewide_lastmod","(all_pages)","<p>For the sitemap root entry, find the maximal Page#lastmod of IndexPage entries in all_pages.\n<p>Returns a …\n"],["slice_strip_fences!","Clayoven::Claytext::Util","Clayoven/Claytext/Util.html#method-c-slice_strip_fences-21","(paragraphs, index, length)","<p>Slice a paragraph along index and length, strip out the first line of the first paragraph,\nthe last line ...\n"],["start","Clayoven::Httpd","Clayoven/Httpd.html#method-c-start","()","<p>Start the server, and shut it down on <code>:INT</code>\n"],["template_changed?","Clayoven::Git","Clayoven/Git.html#method-i-template_changed-3F","()","<p>Indicates if the config or the template was changed, in a way that requires a full rebuild\n"],["to_arabic","Clayoven::Claytext::Transforms::Util","Clayoven/Claytext/Transforms/Util.html#method-c-to_arabic","(str)","<p>Do a roman to arabic conversion\n"],["toplevel","Clayoven::Git","Clayoven/Git.html#method-c-toplevel","()","<p>Return the toplevel directory in the git tree, or an empty string\n"],["unhidden_content_files","Clayoven::Toplevel","Clayoven/Toplevel.html#method-c-unhidden_content_files","(content_files)","<p>Reject the <code>content_files</code> that match Clayoven::Config#hidden\n"],["update_crdate_lastmod","Clayoven::Toplevel::IndexPage","Clayoven/Toplevel/IndexPage.html#method-i-update_crdate_lastmod","(content_pages)","<p>Page#crdate and Page#lastmod are decided, not based on git metadata, but on content_pages\n"],["LICENSE","","LICENSE.html","","<p>Copyright © 2021 Ramkumar Ramachandra\n<p>Permission is hereby granted, free of charge, to any person obtaining …\n"],["README","","README_md.html","","<p>clayoven <img src=\"assets/clayoven.png\">\n<p><img src=\"https://img.shields.io/codeclimate/maintainability/artagnon/clayoven?style=for-the-badge&amp;logo=code-climate&amp;labelColor=000000&amp;label=Maintainability\"> …\n"]]}}